---
- name: "Add NGINX repo"
  template:
    src: nginx.repo
    dest: /etc/yum.repos.d/nginx.repo

- name: Install Nginx
  package:
    name: nginx
    state: present

- name: Install certbot packages
  package:
    name: "{{ item.name }}"
    state: present
  when: (ansible_os_family == 'RedHat' or ansible_distribution == 'Debian') and nginx_use_certbot|bool and item.when
  loop:
    - { name: python3-certbot-nginx, when: "{{ ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8' }}" }
    - { name: python2-certbot-nginx, when: "{{ ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7' }}" }
    - { name: python-certbot-nginx, when: "{{ ansible_os_family == 'Debian' }}" }

- name: Install certbot package (ubuntu)
  snap:
    name:
      - certbot
    classic: true
  when: ansible_distribution == "Ubuntu" and nginx_use_certbot|bool

- name: Configure firewall
  include: firewall.yml

- name: "Create certificate"
  command: "certbot certonly --nginx --register-unsafely-without-email --agree-tos -d {{ nginx_proxy_server_name }}"
  args:
    creates: /etc/letsencrypt/live/{{ fqdn }}
  when: nginx_use_certbot|bool

- name: "Enable systemd timer for certbot"
  service:
    name: certbot-renew.timer
    state: started
    enabled: yes
  when: nginx_use_certbot|bool

- name: Install Element-Web
  include: element.yml

- name: "Nginx: Copy nginx.conf"
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    mode: 0644

- name: "Nginx: Configure default host"
  template:
    src: invalid_host.conf.j2
    dest: /etc/nginx/conf.d/invalid_host.conf
    mode: 0644

- name: "Nginx: Configure tls vhost"
  template:
    src: proxy.conf.j2
    dest: /etc/nginx/conf.d/{{ nginx_proxy_server_name }}.conf
    mode: 0644

- name: "Nginx: Start service"
  service:
    name: nginx
    state: restarted
    enabled: yes
