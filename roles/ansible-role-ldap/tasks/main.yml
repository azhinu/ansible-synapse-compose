---
- name: Setup Firewalld
  block:

  - name: Getting interface name
    set_fact:
      firewall_internal_interface: "{{ item }}"
    when: vars['ansible_'~item].ipv4.address|default('0.0.0.0') == ldap_internal_ip
    with_items:
      - "{{ ansible_interfaces }}"

  - name: Getting docker interface name
    set_fact:
      firewall_docker_interface: "{{ item }}"
    when: ('br-' in item)
    with_items:
      - "{{ ansible_interfaces }}"

  - name: Set internal interface
    command: "firewall-cmd --zone=external --change-interface={{ item }}"
    loop:
      - "{{ firewall_internal_interface }}"
      - "{{ firewall_docker_interface }}"

  - name: Allow internal LDAP
    firewalld:
      zone: external
      service: ldap
      permanent: yes
      state: enabled

  - name: Bounce firewalld
    service:
      name: firewalld
      state: restarted
  when: ansible_os_family == 'RedHat'

- name: Setup UFW
  ufw:
    rule: allow
    port: 389
    proto: tcp
    to_ip: "{{ ldap_internal_ip }}"
  when: ansible_os_family == 'Debian'

- name: Create LDAP directory
  file:
    path: "{{ services_dir }}/ldap"
    state: directory
    owner: root
    group: root
    mode: 0775
    recurse: yes

- name: Copy docker-compose file
  template:
    src: docker-compose.yaml.j2
    dest: "{{ services_dir }}/ldap/docker-compose.yaml"

- name: Start services
  docker_compose:
    project_src: "{{ services_dir }}/ldap"

- debug:
    msg:
    - "LDAP creds:"
    - "  Domain: {{ LDAP_DOMAIN }}"
    - "  LDAP user: admin"
    - "  LDAP password: {{ LDAP_ADMIN_PASSWORD }}"
